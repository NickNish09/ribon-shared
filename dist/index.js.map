{"version":3,"file":"index.js","sources":["../src/services/crashReport/index.ts","../src/hooks/useApi/index.tsx","../src/hooks/useApi/queryClient.tsx","../src/services/api/index.ts","../src/services/api/usersApi/index.ts","../src/hooks/apiHooks/useCanDonate/index.ts","../src/services/api/givingFeesApi/index.ts","../src/hooks/apiHooks/useCardGivingFees/index.ts","../src/services/api/causesApi/index.ts","../src/hooks/apiHooks/useCauses/index.ts","../src/services/api/cryptoTransactionsApi/index.ts","../src/hooks/apiHooks/useCryptoTransaction/index.ts","../src/services/api/donationsApi/index.ts","../src/services/api/impactApi/index.ts","../src/hooks/apiHooks/useDonations/index.ts","../src/hooks/apiHooks/useImpact/index.ts","../src/services/api/integrationsApi/index.ts","../src/lib/platformHelpers/index.ts","../src/lib/localStorage/index.ts","../src/hooks/apiHooks/useIntegration/index.ts","../src/services/api/nonProfitImpactApi/index.ts","../src/hooks/apiHooks/useNonProfitImpact/index.ts","../src/services/api/nonProfitsApi/index.ts","../src/hooks/apiHooks/useNonProfits/index.ts","../src/services/api/offersApi/index.ts","../src/hooks/apiHooks/useOffers/index.ts","../src/services/api/promoterCardGivingsApi/index.ts","../src/hooks/apiHooks/usePromoterCardGivings/index.ts","../src/services/api/sourcesApi/index.ts","../src/hooks/apiHooks/useSources/index.ts","../src/services/api/storiesApi/index.ts","../src/hooks/apiHooks/useStories/index.ts","../src/hooks/apiHooks/useUsers/index.ts","../src/lib/localStorage/constants.ts","../src/utils/constants.ts","../src/services/apiTheGraph/index.tsx","../src/services/apiTheGraph/querys/pool/index.ts","../src/services/apiTheGraph/poolsApi/index.tsx","../src/services/apiTheGraph/querys/promoterDonation/index.tsx","../src/services/apiTheGraph/promoterDonationsApi/index.tsx","../src/services/api/creditCardPaymentApi/index.ts","../src/services/api/donationImpactsApi/index.ts","../src/styles/theme.ts","../src/styles/themeProviderComponent.tsx"],"sourcesContent":["export function logError(error: any, context: any): void {\n  if (process.env.NODE_ENV !== \"production\") {\n    return;\n  }\n\n  console.log(error, context);\n}\n","import { useQuery, UseQueryOptions } from \"react-query\";\nimport { logError } from \"services/crashReport\";\nimport { AxiosResponse } from \"axios\";\n\ninterface Props {\n  key: string;\n  fetchMethod(): Promise<AxiosResponse>;\n  options?: UseQueryOptions<any, Error, any>;\n}\nexport function useApi<T>({ key, fetchMethod, options }: Props) {\n  const { isLoading, error, data, refetch } = useQuery<T, Error>(\n    key,\n    async () => {\n      const { data: fetchData } = await fetchMethod();\n      if (error)\n        logError(error, {\n          customMessage: `An error occurred when fetching ${key}`,\n        });\n\n      return fetchData;\n    },\n    options,\n  );\n\n  return {\n    isLoading,\n    error,\n    data,\n    refetch,\n  };\n}\n","import React from 'react';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\ntype Props = {\n  children: React.ReactNode;\n}\n\nexport default function QueryClientComponent({ children }: Props) {\n  const queryClient = new QueryClient();\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  );\n}\n","import Axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport camelCaseKeys from \"camelcase-keys\";\nimport snakeCaseKeys from \"snakecase-keys\";\nconst RIBON_API =\n  process.env.REACT_APP_RIBON_API ||\n  \"http://ribon-core-api-dev.us-east-1.elasticbeanstalk.com/\";\n\nexport const baseURL = RIBON_API;\nexport const API_SCOPE = \"/api/v1\";\n\nconst api = Axios.create({\n  baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  validateStatus: (status) => status >= 200 && status < 300,\n});\n\napi.interceptors.request.use((request) =>\n  request?.data\n    ? { ...request, data: snakeCaseKeys(request?.data, { deep: true }) }\n    : request,\n);\n\napi.interceptors.response.use(\n  (response) => ({\n    ...response,\n    data: camelCaseKeys(response.data, { deep: true }),\n  }),\n  (error) => Promise.reject(error),\n);\n\nexport function apiGet(url: string, config?: AxiosRequestConfig) {\n  if (config) return api.get(`${API_SCOPE}/${url}`, config);\n\n  return api.get(`${API_SCOPE}/${url}`);\n}\n\nexport function apiPost(url: string, data: any, config?: AxiosRequestConfig) {\n  if (config) return api.post(`${API_SCOPE}/${url}`, data, config);\n\n  return api.post(`${API_SCOPE}/${url}`, data);\n}\n\nexport function apiPut(url: string, data: any, config?: AxiosRequestConfig) {\n  if (config) return api.put(`${API_SCOPE}/${url}`, data, config);\n\n  return api.put(`${API_SCOPE}/${url}`, data);\n}\n\nexport function apiDelete(url: string, config?: AxiosRequestConfig) {\n  if (config) return api.delete(`${API_SCOPE}/${url}`, config);\n\n  return api.delete(`${API_SCOPE}/${url}`);\n}\n\nexport function emptyRequest(): Promise<AxiosResponse<any, any>> {\n  return {} as Promise<AxiosResponse>;\n}\n\nexport default api;\n","import { AxiosResponse } from \"axios\";\nimport User from \"types/entities/User\";\nimport CanDonate from \"types/apiResponses/CanDonate\";\nimport { apiPost } from \"..\";\n\nconst usersApi = {\n  postCreateUser: (email: string): Promise<AxiosResponse<User>> =>\n    apiPost(\"users\", { email }),\n\n  postSearchUser: (email: string): Promise<AxiosResponse<User>> =>\n    apiPost(\"users/search\", { email }),\n\n  postCanDonate: (\n    integrationId: number | string,\n  ): Promise<AxiosResponse<CanDonate>> =>\n    apiPost(\"users/can_donate\", { integrationId }),\n};\n\nexport default usersApi;\n","import { useApi } from 'hooks/useApi';\nimport usersApi from 'services/api/usersApi';\nimport CanDonate from 'types/apiResponses/CanDonate';\nimport { emptyRequest } from 'services/api';\n\nfunction useCanDonate(integrationId: number | string | null) {\n  const {\n    data: canDonate,\n    isLoading,\n    refetch,\n  } = useApi<CanDonate>({\n    key: 'canDonate',\n    fetchMethod: () => {\n      if (integrationId) return usersApi.postCanDonate(integrationId);\n\n      return emptyRequest();\n    },\n    options: {\n      enabled: !!integrationId,\n    },\n  });\n\n  function formattedCanDonate() {\n    if (canDonate === undefined) return true;\n\n    return canDonate.canDonate;\n  }\n\n  return { canDonate: formattedCanDonate(), isLoading, refetch };\n}\n\nexport default useCanDonate;\n","import { AxiosResponse } from \"axios\";\nimport CardFees from \"types/apiResponses/CardFees\";\nimport { Currencies } from \"types/enums/Currencies\";\nimport { apiPost } from \"..\";\n\nconst givingFeesApi = {\n  postCardFees: (\n    value: number,\n    currency: Currencies,\n  ): Promise<AxiosResponse<CardFees>> =>\n    apiPost(\"givings/card_fees\", {\n      value,\n      currency,\n    }),\n};\n\nexport default givingFeesApi;\n","import { useApi } from \"hooks/useApi\";\nimport { Currencies } from \"types/enums/Currencies\";\nimport CardFees from \"types/apiResponses/CardFees\";\nimport givingFeesApi from \"services/api/givingFeesApi\";\n\nfunction useCardGivingFees(value: number, currency: Currencies) {\n  const {\n    data: cardGivingFees,\n    isLoading,\n    refetch,\n  } = useApi<CardFees>({\n    key: \"cardGivingFees\",\n    fetchMethod: () => givingFeesApi.postCardFees(value, currency),\n    options: {\n      enabled: value > 0,\n    },\n  });\n\n  return { cardGivingFees, isLoading, refetch };\n}\n\nexport default useCardGivingFees;\n","import { AxiosResponse } from \"axios\";\nimport Cause from \"types/entities/Cause\";\nimport { apiGet } from \"..\";\n\nconst causesApi = {\n  getCauses: (): Promise<AxiosResponse<Cause[]>> => apiGet(\"causes/\"),\n  getCause: (id: number): Promise<AxiosResponse<Cause>> =>\n    apiGet(`causes/${id}`),\n};\n\nexport default causesApi;\n","import causesApi from \"services/api/causesApi\";\nimport Cause from \"types/entities/Cause\";\nimport { useApi } from \"../../useApi\";\n\nfunction useCauses() {\n  const {\n    data: causes,\n    isLoading,\n    refetch,\n  } = useApi<Cause[]>({\n    key: \"causes\",\n    fetchMethod: () => causesApi.getCauses(),\n  });\n\n  async function getCause(causeId: number) {\n    const { data: cause } = await causesApi.getCause(causeId);\n\n    return cause;\n  }\n\n  return {\n    causes: causes || [],\n    getCause,\n    isLoading,\n    refetch,\n  };\n}\n\nexport default useCauses;\n","import { AxiosResponse } from \"axios\";\nimport { TransactionStatus } from \"types/enums/TransactionStatus\";\nimport { apiPost, apiPut } from \"..\";\n\nconst cryptoTransactionApi = {\n  postTransaction: (\n    transactionHash: string,\n    amount: string,\n    walletAddress: string,\n    integrationId: string | number,\n  ): Promise<AxiosResponse<any>> =>\n    apiPost(\"payments/cryptocurrency\", {\n      transactionHash,\n      amount,\n      walletAddress,\n      integrationId,\n    }),\n\n  putTransactionStatus: (\n    transactionHash: string,\n    status: TransactionStatus,\n  ): Promise<AxiosResponse<any>> =>\n    apiPut(\"payments/cryptocurrency\", { transactionHash, status }),\n};\n\nexport default cryptoTransactionApi;\n","import cryptoTransactionApi from \"services/api/cryptoTransactionsApi\";\nimport { TransactionStatus } from \"types/enums/TransactionStatus\";\n\nfunction useCryptoTransaction() {\n  async function createTransaction(\n    transactionHash: string,\n    amount: string,\n    walletAddress: string,\n    integrationId: string | number,\n  ) {\n    const { data: transaction } = await cryptoTransactionApi.postTransaction(\n      transactionHash,\n      amount,\n      walletAddress,\n      integrationId,\n    );\n\n    return transaction;\n  }\n\n  async function updateTransactionStatus(\n    transactionHash: string,\n    status: TransactionStatus,\n  ) {\n    const { data: transaction } =\n      await cryptoTransactionApi.putTransactionStatus(transactionHash, status);\n\n    return transaction;\n  }\n\n  return {\n    createTransaction,\n    updateTransactionStatus,\n  };\n}\n\nexport default useCryptoTransaction;\n","import { AxiosResponse } from \"axios\";\nimport Donation from \"types/entities/Donation\";\nimport { apiPost } from \"..\";\n\nconst donationsApi = {\n  postDonation: (\n    integrationId: number,\n    nonProfitId: number,\n    email: string,\n  ): Promise<AxiosResponse<Donation>> =>\n    apiPost(\"donations\", { integrationId, nonProfitId, email }),\n\n  postVoucherDonation: (\n    integrationId: number,\n    nonProfitId: number,\n    email: string,\n    externalId: string,\n  ): Promise<AxiosResponse<Donation>> =>\n    apiPost(\"vouchers/donations\", {\n      integrationId,\n      nonProfitId,\n      email,\n      externalId,\n    }),\n};\n\nexport default donationsApi;\n","import { AxiosResponse } from \"axios\";\nimport Impact from \"types/entities/Impact\";\nimport DonationsCount from \"types/apiResponses/DonationsCount\";\nimport { apiGet } from \"..\";\n\nconst impactApi = {\n  getImpact: (id: number | null): Promise<AxiosResponse<Impact[]>> =>\n    apiGet(`users/${id}/impacts`),\n\n  getDonationsCount: (\n    id: number | null,\n  ): Promise<AxiosResponse<DonationsCount>> =>\n    apiGet(`users/${id}/donations_count`),\n};\n\nexport default impactApi;\n","import donationsApi from \"services/api/donationsApi\";\nimport impactApi from \"services/api/impactApi\";\nimport { useApi } from \"hooks/useApi\";\nimport DonationsCount from \"types/apiResponses/DonationsCount\";\n\nfunction useDonations(userId: number | undefined) {\n  const { data: donationsCountResponse } = useApi<DonationsCount>({\n    key: \"donationsCount\",\n    fetchMethod: () => {\n      const id = userId || null;\n      return impactApi.getDonationsCount(id);\n    },\n    options: {\n      enabled: !!userId,\n    },\n  });\n\n  async function donate(\n    integrationId: number,\n    nonProfitId: number,\n    email: string,\n    externalId?: string,\n  ) {\n    if (externalId) {\n      await donationsApi.postVoucherDonation(\n        integrationId,\n        nonProfitId,\n        email,\n        externalId,\n      );\n\n      return;\n    }\n\n    await donationsApi.postDonation(integrationId, nonProfitId, email);\n  }\n\n  return {\n    donate,\n    donationsCount: donationsCountResponse?.donationsCount,\n  };\n}\n\nexport default useDonations;\n","import impactApi from \"services/api/impactApi\";\nimport { useApi } from \"hooks/useApi\";\nimport Impact from \"types/entities/Impact\";\n\nfunction useImpact(userId: number | undefined) {\n  const { data: userImpact } = useApi<Impact[]>({\n    key: \"impacts\",\n    fetchMethod: () => {\n      const id = userId || null;\n      return impactApi.getImpact(id);\n    },\n    options: {\n      enabled: !!userId,\n    },\n  });\n\n  return {\n    userImpact,\n  };\n}\n\nexport default useImpact;\n","import { AxiosResponse } from \"axios\";\nimport Integration from \"types/entities/Integration\";\nimport { apiGet } from \"..\";\n\nconst integrationsApi = {\n  getIntegration: (id: number | string): Promise<AxiosResponse<Integration>> =>\n    apiGet(`integrations/${id}`),\n};\n\nexport default integrationsApi;\n","export function isNative() {\n  return typeof navigator !== 'undefined' && navigator.product === 'ReactNative';\n}\n\nexport function isWeb() {\n  return typeof document !== 'undefined';\n}\n","import { isNative, isWeb } from '../platformHelpers';\n\nexport function setLocalStorageItem(key: string, value: string): void {\n  if (isNative()) {\n    return;\n  } else if (isWeb()) {\n    localStorage.setItem(key, value);\n  }\n}\n\nexport function getLocalStorageItem(key: string): string | null {\n  if (isNative()) {\n    return null;\n  } else if (isWeb()) {\n    return localStorage.getItem(key);\n  }\n\n  return null;\n}\n\nexport function removeLocalStorageItem(key: string) {\n  if (isNative()) {\n    return;\n  } else if (isWeb()) {\n    localStorage.removeItem(key);\n  }\n}\n","import { useApi } from 'hooks/useApi';\nimport integrationsApi from 'services/api/integrationsApi';\nimport Integration from 'types/entities/Integration';\nimport { setLocalStorageItem } from 'lib/localStorage';\n\nfunction useIntegration(integrationId: number | string | null | undefined) {\n  if (!integrationId) {\n    setLocalStorageItem('integrationName', 'undefined');\n    return {\n      integration: {} as Integration,\n      isLoading: true,\n      refetch: () => {},\n    };\n  }\n\n  const {\n    data: integration,\n    isLoading,\n    refetch,\n    error,\n  } = useApi<Integration>({\n    key: 'integration',\n    fetchMethod: () => integrationsApi.getIntegration(integrationId),\n    options: {\n      enabled: !!integrationId,\n    },\n  });\n\n  if (error) {\n    setLocalStorageItem('integrationName', 'error');\n  }\n\n  if (integration) {\n    setLocalStorageItem('integrationName', integration.name);\n  }\n\n  return { integration, isLoading, refetch, error };\n}\n\nexport default useIntegration;\n","import { AxiosResponse } from \"axios\";\nimport NonProfit from \"types/entities/NonProfit\";\nimport { Currencies } from \"types/enums/Currencies\";\nimport { apiPost } from \"..\";\n\nconst nonProfitImpactApi = {\n  postImpactByNonProfit: (\n    nonProfitId?: number,\n    value?: number,\n    currency?: Currencies,\n  ): Promise<AxiosResponse<NonProfit[]>> =>\n    apiPost(\"givings/impact_by_non_profit\", {\n      nonProfitId,\n      value,\n      currency,\n    }),\n};\n\nexport default nonProfitImpactApi;\n","import { useApi } from \"hooks/useApi\";\nimport { Currencies } from \"types/enums/Currencies\";\nimport nonProfitImpactApi from \"services/api/nonProfitImpactApi\";\nimport NonProfitImpact from \"types/apiResponses/NonProfitImpact\";\nimport { emptyRequest } from \"services/api\";\n\nfunction useNonProfitImpact(\n  nonProfitId?: number,\n  value?: number,\n  currency?: Currencies,\n) {\n  const {\n    data: nonProfitImpact,\n    isLoading,\n    refetch,\n  } = useApi<NonProfitImpact>({\n    key: `nonProfitImpact${nonProfitId}`,\n    fetchMethod: () => {\n      if (nonProfitId && value && currency)\n        return nonProfitImpactApi.postImpactByNonProfit(\n          nonProfitId,\n          value,\n          currency,\n        );\n\n      return emptyRequest();\n    },\n    options: {\n      enabled: !!nonProfitId && !!value && !!currency,\n    },\n  });\n\n  return { nonProfitImpact, isLoading, refetch };\n}\n\nexport default useNonProfitImpact;\n","import { AxiosResponse } from \"axios\";\nimport NonProfit from \"types/entities/NonProfit\";\nimport { apiGet } from \"..\";\n\nconst nonProfitsApi = {\n  getNonProfits: (): Promise<AxiosResponse<NonProfit[]>> =>\n    apiGet(\"non_profits\"),\n};\n\nexport default nonProfitsApi;\n","import { useApi } from \"hooks/useApi\";\nimport nonProfitsApi from \"services/api/nonProfitsApi\";\nimport NonProfit from \"types/entities/NonProfit\";\n\nfunction useNonProfits() {\n  const {\n    data: nonProfits,\n    isLoading,\n    refetch,\n  } = useApi<NonProfit[]>({\n    key: \"nonProfits\",\n    fetchMethod: nonProfitsApi.getNonProfits,\n  });\n\n  return { nonProfits, isLoading, refetch };\n}\n\nexport default useNonProfits;\n","import { AxiosResponse } from \"axios\";\nimport Offer from \"types/entities/Offer\";\nimport { Currencies } from \"types/enums/Currencies\";\nimport { apiGet } from \"..\";\n\nconst offersApi = {\n  getOffers: (\n    currency: Currencies,\n    subscription: boolean,\n  ): Promise<AxiosResponse<Offer[]>> =>\n    apiGet(\n      `givings/offers?currency=${currency.toLowerCase()}&subscription=${subscription}`,\n    ),\n  getOffer: (id: number): Promise<AxiosResponse<Offer>> =>\n    apiGet(`givings/offers/${id}`),\n};\n\nexport default offersApi;\n","import offersApi from \"services/api/offersApi\";\nimport Offer from \"types/entities/Offer\";\nimport { Currencies } from \"types/enums/Currencies\";\nimport { useApi } from \"../../useApi\";\n\nfunction useOffers(currency: Currencies, subscription = false) {\n  const {\n    data: offers,\n    isLoading,\n    refetch,\n  } = useApi<Offer[]>({\n    key: \"offers\",\n    fetchMethod: () => offersApi.getOffers(currency, subscription),\n  });\n\n  async function getOffer(offerId: number) {\n    const { data: offer } = await offersApi.getOffer(offerId);\n\n    return offer;\n  }\n\n  return {\n    offers: offers || [],\n    getOffer,\n    isLoading,\n    refetch,\n  };\n}\n\nexport default useOffers;\n","import { AxiosResponse } from \"axios\";\nimport PromoterCardGiving from \"types/apiResponses/PromoterCardGiving\";\nimport { Currencies } from \"types/enums/Currencies\";\nimport { apiGet } from \"..\";\n\nconst promoterCardGivingsApi = {\n  getPromoterCardGivings: (\n    email: string | undefined,\n    currency: Currencies,\n  ): Promise<AxiosResponse<PromoterCardGiving[]>> =>\n    apiGet(`givings/user_givings?email=${email}&currency=${currency}`),\n};\n\nexport default promoterCardGivingsApi;\n","import promoterCardGivingsApi from \"services/api/promoterCardGivingsApi\";\nimport PromoterCardGiving from \"types/apiResponses/PromoterCardGiving\";\nimport { Currencies } from \"types/enums/Currencies\";\nimport { useApi } from \"../../useApi\";\n\nfunction usePromoterCardGivings(\n  email: string | undefined,\n  currency: Currencies,\n) {\n  const {\n    data: promoterCardGivings,\n    isLoading,\n    refetch,\n  } = useApi<PromoterCardGiving[]>({\n    key: \"promoterCardGivings\",\n    fetchMethod: () =>\n      promoterCardGivingsApi.getPromoterCardGivings(email, currency),\n    options: {\n      enabled: !!email,\n    },\n  });\n\n  return {\n    promoterCardGivings,\n    isLoading,\n    refetch,\n  };\n}\n\nexport default usePromoterCardGivings;\n","import { AxiosResponse } from \"axios\";\nimport { apiPost } from \"..\";\n\nconst sourcesApi = {\n  postCreateSource: (\n    userId: number,\n    integrationId: number,\n  ): Promise<AxiosResponse<any>> =>\n    apiPost(\"sources\", { userId, integrationId }),\n};\n\nexport default sourcesApi;\n","import sourcesApi from \"services/api/sourcesApi\";\n\nfunction useSources() {\n  async function createSource(userId: number, integrationId: number) {\n    const { data: source } = await sourcesApi.postCreateSource(\n      userId,\n      integrationId,\n    );\n\n    return source;\n  }\n\n  return {\n    createSource,\n  };\n}\n\nexport default useSources;\n","import { AxiosResponse } from \"axios\";\nimport Story from \"types/entities/Story\";\nimport { apiGet } from \"..\";\n\nconst storiesApi = {\n  getNonProfitStories: (id: number | string): Promise<AxiosResponse<Story[]>> =>\n    apiGet(`non_profits/${id}/stories`),\n};\n\nexport default storiesApi;\n","import storiesApi from \"services/api/storiesApi\";\n\nfunction useStories() {\n  async function fetchNonProfitStories(NonProfitId: number) {\n    const { data: stories } = await storiesApi.getNonProfitStories(NonProfitId);\n\n    return stories;\n  }\n\n  return {\n    fetchNonProfitStories,\n  };\n}\n\nexport default useStories;\n","import usersApi from \"services/api/usersApi\";\n\nfunction useUsers() {\n  async function findUser(email: string) {\n    const { data: user } = await usersApi.postSearchUser(email);\n\n    return user;\n  }\n\n  async function createUser(email: string) {\n    const { data: user } = await usersApi.postCreateUser(email);\n\n    return user;\n  }\n\n  async function findOrCreateUser(email: string) {\n    let user;\n    try {\n      user = await findUser(email);\n    } catch (e) {\n      user = await createUser(email);\n    }\n\n    return user;\n  }\n\n  return {\n    createUser,\n    findUser,\n    findOrCreateUser,\n  };\n}\n\nexport default useUsers;\n","export const ACCEPTED_PRIVACY_POLICY_KEY = \"ACCEPTED_PRIVACY_POLICY_KEY\";\nexport const EMAIL_KEY = \"EMAIL_KEY\";\nexport const TOKEN_KEY = \"TOKEN_KEY\";\n\nexport const DONATION_MODAL_SEEN_AT_KEY = \"DONATION_MODAL_SEEN_AT_KEY\";\nexport const HAS_AN_AVAILABLE_VOUCHER = \"HAS_AN_AVAILABLE_VOUCHER\";\nexport const COMES_FROM_TREASURE = \"COMES_FROM_TREASURE\";\nexport const SUBGRAPH_URL = \"SUBGRAPH_URL\";\nexport const CHAIN_ID = \"CHAIN_ID\";\n","import { getLocalStorageItem } from \"lib/localStorage\";\nimport { SUBGRAPH_URL } from \"lib/localStorage/constants\";\n\nexport const RIBON_COMPANY_ID = process.env.REACT_APP_RIBON_COMPANY_ID || \"1\";\n\nexport const RIBON_GROWTHBOOK_URL =\n  \"https://growthbook.ribon.io:444/api/features/key_prod_2161769c509d739b\";\n\nexport const RIBON_API =\n  process.env.REACT_APP_RIBON_API ||\n  \"http://ribon-core-api-dev.us-east-1.elasticbeanstalk.com/\";\n\nexport const THE_GRAPH_API =\n  getLocalStorageItem(SUBGRAPH_URL) ||\n  \"https://api.thegraph.com/subgraphs/name/ribondao/ribonsubgraph\";\n","import { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\nimport { THE_GRAPH_API } from 'utils/constants';\nimport fetch from 'cross-fetch';\n\nconst APIURL = THE_GRAPH_API;\n\nexport const client = new ApolloClient({\n  uri: APIURL,\n  cache: new InMemoryCache(),\n  link: new HttpLink({ uri: APIURL, fetch }),\n});\n","import { gql } from \"@apollo/client\";\n\nexport const ALL_POOLS_QUERY_NAME = \"INTEGRATION_ID_QUERY\";\nexport const POOL_ID_QUERY_NAME = \"POOL_ID_QUERY\";\n\nexport const QUERY_ALL_POOLS = gql`\n  query ${ALL_POOLS_QUERY_NAME} {\n    pools {\n      id\n      balance\n    }\n  }\n`;\n\nexport const QUERY_POOL_ID = gql`\n  query ${POOL_ID_QUERY_NAME}($pool: Bytes!) {\n    pools(\n      where: { id: $pool }\n    ) {\n      id\n      balance\n    }\n  }\n`;\n","import { ApolloQueryResult } from \"@apollo/client\";\nimport { client } from \"..\";\nimport { QUERY_ALL_POOLS, QUERY_POOL_ID } from \"../querys/pool\";\n\nexport const poolsApi = {\n  fetchAllPools: (): Promise<ApolloQueryResult<any>> =>\n    client.query({\n      query: QUERY_ALL_POOLS,\n      fetchPolicy: \"no-cache\",\n    }),\n\n  fetchPool: (pool: string): Promise<ApolloQueryResult<any>> =>\n    client.query({\n      query: QUERY_POOL_ID,\n      variables: { pool },\n      fetchPolicy: \"no-cache\",\n    }),\n};\n\nexport default poolsApi;\n","import { gql } from \"@apollo/client\";\n\nexport const PROMOTER_DONATIONS_ID_QUERY_NAME = \"PROMOTER_DONATIONS_ID_QUERY\";\nexport const ALL_PROMOTERS_DONATIONS_QUERY_NAME =\n  \"ALL_PROMOTERS_DONATIONS_QUERY\";\n\nexport const QUERY_PROMOTER_DONATION_ID = gql`\n  query ${PROMOTER_DONATIONS_ID_QUERY_NAME}($promoter: Bytes!, $first: Int) {\n     promoterDonations(where: {promoter: $promoter}\n      orderBy: timestamp\n      orderDirection: desc\n      first: $first\n    ) {\n      id\n      amountDonated\n      timestamp\n    }\n  }\n`;\n\nexport const QUERY_ALL_PROMOTERS_DONATIONS = gql`\n  query ${ALL_PROMOTERS_DONATIONS_QUERY_NAME}($first: Int) {\n    promoterDonations(\n      orderBy: timestamp\n      orderDirection: desc\n      first: $first\n    ) {\n      id\n      amountDonated\n      timestamp\n    }\n  }\n`;\n","import { ApolloQueryResult } from \"@apollo/client\";\nimport { client } from \"..\";\nimport {\n  QUERY_PROMOTER_DONATION_ID,\n  QUERY_ALL_PROMOTERS_DONATIONS,\n} from \"../querys/promoterDonation\";\n\nexport const promoterDonationsApi = {\n  fetchPromoterDonations: (\n    promoter: string,\n    first: number,\n  ): Promise<ApolloQueryResult<any>> =>\n    client.query({\n      query: QUERY_PROMOTER_DONATION_ID,\n      variables: {\n        promoter,\n        first,\n      },\n      fetchPolicy: \"no-cache\",\n    }),\n\n  fetchAllPromotersDonations: (\n    first: number,\n  ): Promise<ApolloQueryResult<any>> =>\n    client.query({\n      query: QUERY_ALL_PROMOTERS_DONATIONS,\n      variables: {\n        first,\n      },\n      fetchPolicy: \"no-cache\",\n    }),\n};\n\nexport default promoterDonationsApi;\n","import { AxiosResponse } from \"axios\";\nimport CreditCardPayment from \"types/entities/CreditCardPayment\";\nimport { apiPost } from \"..\";\n\nconst creditCardPaymentApi = {\n  postCreditCardPayment: (\n    paymentInformation: CreditCardPayment,\n  ): Promise<AxiosResponse<CreditCardPayment>> =>\n    apiPost(\"payments/credit_cards\", paymentInformation),\n};\n\nexport default creditCardPaymentApi;\n","import { AxiosResponse } from \"axios\";\nimport { apiGet } from \"..\";\n\nconst donationImpactsApi = {\n  getDonationImpact: (): Promise<AxiosResponse<any>> => apiGet(\"users/impact\"),\n};\n\nexport default donationImpactsApi;\n","export interface Breakpoint {\n  mobile: string;\n  mobileMedium: string;\n  pad: string;\n  desktop: string;\n}\n\ninterface ThemeType {\n  breakpoints: Breakpoint;\n  [key: string]: any;\n}\n\nconst theme: ThemeType = {\n  grid: {},\n  border: {},\n  font: {\n    light: 300,\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n    sizes: {},\n  },\n  colors: {\n    neutral10: \"#FFFFFF\",\n    red10: \"#FDEBFF\",\n    red20: \"#F2A9C3\",\n    red30: \"#FF6B6F\",\n    red40: \"#912547\",\n    green10: \"#D1FFDB\",\n    green20: \"#8CE0BE\",\n    green30: \"#00DA93\",\n    green40: \"#025B37\",\n    orange10: \"#FFD5BF\",\n    orange20: \"#FF9661\",\n    orange30: \"#FA7203\",\n    orange40: \"#AF5333\",\n    yellow10: \"#F0E8C2\",\n    yellow20: \"#FFEB7A\",\n    yellow30: \"#FFCE00\",\n    yellow40: \"#775B33\",\n    gray10: \"#F2F2F0\",\n    gray20: \"#D4CEC3\",\n    gray30: \"#867F70\",\n    gray40: \"#28241C\",\n    defaultShadow: \"rgba(40, 36, 28, 0.15)\",\n    defaultShadow10: \"rgba(40, 36, 28, 0.1)\",\n    defaultShadow05: \"rgba(40, 36, 28, 0.05)\",\n    backgroundOverlay: \"rgba(40, 36, 28, 0.60)\",\n  },\n  filters: {\n    filterOrange40:\n      \"invert(58%) sepia(6%) saturate(5888%) hue-rotate(326deg) brightness(69%) contrast(100%)\",\n  },\n  zindex: {\n    base: 0,\n    above: 1,\n    below: -1,\n    dropdown: 2,\n    navigator: 3,\n    navbar: 4,\n    modal: 5,\n    toast: 6,\n    loading: 7,\n\n    stories: {\n      base: 999,\n    },\n  },\n  spacings: {},\n  breakpoints: {\n    mobile: \"0px\",\n    mobileMedium: \"374px\",\n    pad: \"600px\",\n    desktop: \"1024px\",\n  },\n};\n\nexport default theme;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { ThemeProvider as ThemeProviderNative } from 'styled-components/native';\nimport theme from \"./theme\";\ntype Props = {\n  children: React.ReactNode;\n}\nexport function ThemeProviderComponent({children}: Props){\n  return <ThemeProvider theme={theme}>\n    {children}\n  </ThemeProvider>\n}\n\nexport function ThemeProviderNativeComponent({children}: Props){\n  return <ThemeProviderNative theme={theme}>\n    {children}\n  </ThemeProviderNative>\n}\n"],"names":["logError","error","context","process","env","NODE_ENV","console","log","useApi","_a","key","fetchMethod","options","_b","useQuery","fetchData","customMessage","isLoading","data","refetch","QueryClientComponent","children","queryClient","QueryClient","React","QueryClientProvider","client","RIBON_API","REACT_APP_RIBON_API","baseURL","API_SCOPE","api","Axios","create","headers","Content-Type","validateStatus","status","apiGet","url","config","get","apiPost","post","apiPut","put","apiDelete","delete","emptyRequest","interceptors","request","use","snakeCaseKeys","deep","response","camelCaseKeys","Promise","reject","usersApi","postCreateUser","email","postSearchUser","postCanDonate","integrationId","useCanDonate","enabled","canDonate","undefined","givingFeesApi","postCardFees","value","currency","useCardGivingFees","cardGivingFees","causesApi","getCauses","getCause","id","useCauses","causes","causeId","cryptoTransactionApi","postTransaction","transactionHash","amount","walletAddress","putTransactionStatus","useCryptoTransaction","createTransaction","updateTransactionStatus","donationsApi","postDonation","nonProfitId","postVoucherDonation","externalId","impactApi","getImpact","getDonationsCount","useDonations","userId","donationsCountResponse","donate","donationsCount","useImpact","userImpact","integrationsApi","getIntegration","isNative","navigator","product","isWeb","document","setLocalStorageItem","localStorage","setItem","getLocalStorageItem","getItem","useIntegration","integration","name","nonProfitImpactApi","postImpactByNonProfit","useNonProfitImpact","nonProfitImpact","nonProfitsApi","getNonProfits","useNonProfits","nonProfits","offersApi","getOffers","subscription","toLowerCase","getOffer","useOffers","offers","offerId","promoterCardGivingsApi","getPromoterCardGivings","usePromoterCardGivings","promoterCardGivings","sourcesApi","postCreateSource","useSources","createSource","storiesApi","getNonProfitStories","useStories","fetchNonProfitStories","NonProfitId","useUsers","findUser","createUser","findOrCreateUser","user","SUBGRAPH_URL","RIBON_COMPANY_ID","REACT_APP_RIBON_COMPANY_ID","THE_GRAPH_API","APIURL","ApolloClient","uri","cache","InMemoryCache","link","HttpLink","fetch","ALL_POOLS_QUERY_NAME","POOL_ID_QUERY_NAME","QUERY_ALL_POOLS","gql","QUERY_POOL_ID","poolsApi","fetchAllPools","query","fetchPolicy","fetchPool","pool","variables","PROMOTER_DONATIONS_ID_QUERY_NAME","ALL_PROMOTERS_DONATIONS_QUERY_NAME","QUERY_PROMOTER_DONATION_ID","QUERY_ALL_PROMOTERS_DONATIONS","promoterDonationsApi","fetchPromoterDonations","promoter","first","fetchAllPromotersDonations","creditCardPaymentApi","postCreditCardPayment","paymentInformation","donationImpactsApi","getDonationImpact","theme","grid","border","font","light","normal","medium","semibold","bold","sizes","colors","neutral10","red10","red20","red30","red40","green10","green20","green30","green40","orange10","orange20","orange30","orange40","yellow10","yellow20","yellow30","yellow40","gray10","gray20","gray30","gray40","defaultShadow","defaultShadow10","defaultShadow05","backgroundOverlay","filters","filterOrange40","zindex","base","above","below","dropdown","navbar","modal","toast","loading","stories","spacings","breakpoints","mobile","mobileMedium","pad","desktop","ThemeProviderComponent","ThemeProvider","ThemeProviderNativeComponent","ThemeProviderNative"],"mappings":"w2EAAgBA,SAASC,EAAYC,GACN,eAAzBC,QAAQC,IAAIC,UAIhBC,QAAQC,IAAIN,EAAOC,YCILM,OAAUC,GAA1B,WAA4BC,QAAKC,gBAAaC,YACtCC,EAAsCC,oBAC1CJ,EACA,wHAC8B,SAAMC,YAMlC,OANcI,EAAcN,cACxBR,GACFD,SAASC,EAAO,CACde,cAAe,mCAAmCN,OAG/CK,SAETH,GAXMK,cAAWhB,UAAOiB,SAAMC,YAchC,MAAO,CACLF,YACAhB,QACAiB,OACAC,oBCrBoBC,qBAAqBX,OAAEY,aACvCC,EAAc,IAAIC,uBACxB,OACEC,oBAACC,gCAAoBC,OAAQJ,GAC1BD,GCRP,IAAMM,UACJxB,QAAQC,IAAIwB,qBACZ,4DAEWC,QAAUF,UACVG,UAAY,UAEnBC,IAAMC,MAAMC,OAAO,CACvBJ,QAJqBF,UAKrBO,QAAS,CACPC,eAAgB,oBAElBC,eAAgB,SAACC,GAAW,OAAU,KAAVA,GAAiBA,EAAS,gBAiBxCC,OAAOC,EAAaC,GAClC,OAAIA,EAAeT,IAAIU,IAAOX,cAAaS,EAAOC,GAE3CT,IAAIU,IAAOX,cAAaS,GAGjC,SAAgBG,QAAQH,EAAarB,EAAWsB,GAC9C,OAAIA,EAAeT,IAAIY,KAAQb,cAAaS,EAAOrB,EAAMsB,GAElDT,IAAIY,KAAQb,cAAaS,EAAOrB,GAGzC,SAAgB0B,OAAOL,EAAarB,EAAWsB,GAC7C,OAAIA,EAAeT,IAAIc,IAAOf,cAAaS,EAAOrB,EAAMsB,GAEjDT,IAAIc,IAAOf,cAAaS,EAAOrB,YAGxB4B,UAAUP,EAAaC,GACrC,OAAIA,EAAeT,IAAIgB,OAAUjB,cAAaS,EAAOC,GAE9CT,IAAIgB,OAAUjB,cAAaS,GAGpC,SAAgBS,eACd,MAAO,GAvCTjB,IAAIkB,aAAaC,QAAQC,IAAI,SAACD,GAC5B,OAAAA,MAAAA,GAAAA,EAAShC,0BACAgC,IAAShC,KAAMkC,cAAcF,MAAAA,SAAAA,EAAShC,KAAM,CAAEmC,MAAM,MACzDH,IAGNnB,IAAIkB,aAAaK,SAASH,IACxB,SAACG,GAAa,4BACTA,IACHpC,KAAMqC,cAAcD,EAASpC,KAAM,CAAEmC,MAAM,OAE7C,SAACpD,GAAU,OAAAuD,QAAQC,OAAOxD,KCxB5B,IAAMyD,SAAW,CACfC,eAAgB,SAACC,GACf,OAAAlB,QAAQ,QAAS,CAAEkB,WAErBC,eAAgB,SAACD,GACf,OAAAlB,QAAQ,eAAgB,CAAEkB,WAE5BE,cAAe,SACbC,GAEA,OAAArB,QAAQ,mBAAoB,CAAEqB,oBCVlC,SAASC,aAAaD,GACd,IAAAtD,EAIFD,OAAkB,CACpBE,IAAK,YACLC,YAAa,WACX,OAAIoD,EAAsBL,SAASI,cAAcC,GAE1Cf,gBAETpC,QAAS,CACPqD,UAAWF,KAXPG,SACNjD,cACAE,YAmBF,MAAO,CAAE+C,eALWC,IAAdD,GAEGA,EAAUA,UAGuBjD,YAAWE,WCvBvD,IAAMiD,cAAgB,CACpBC,aAAc,SACZC,EACAC,GAEA,OAAA7B,QAAQ,oBAAqB,CAC3B4B,QACAC,eCPN,SAASC,kBAAkBF,EAAeC,GAClC,IAAA9D,EAIFD,OAAiB,CACnBE,IAAK,iBACLC,YAAa,WAAM,OAAAyD,cAAcC,aAAaC,EAAOC,IACrD3D,QAAS,CACPqD,QAAiB,EAARK,KAIb,MAAO,CAAEG,sBAAgBxD,sBAAWE,mBCdtC,IAAMuD,UAAY,CAChBC,UAAW,WAAuC,OAAArC,OAAO,YACzDsC,SAAU,SAACC,GACT,OAAAvC,OAAO,UAAUuC,KCHrB,SAASC,YACD,IAAArE,EAIFD,OAAgB,CAClBE,IAAK,SACLC,YAAa,WAAM,OAAA+D,UAAUC,eAS/B,MAAO,CACLI,eAAkB,GAClBH,SARF,SAAwBI,6GACE,SAAMN,UAAUE,SAASI,WAEjD,SAFwBvE,qBAQxBQ,sBACAE,mBCpBJ,IAAM8D,qBAAuB,CAC3BC,gBAAiB,SACfC,EACAC,EACAC,EACAtB,GAEA,OAAArB,QAAQ,0BAA2B,CACjCyC,kBACAC,SACAC,gBACAtB,mBAGJuB,qBAAsB,SACpBH,EACA9C,GAEA,OAAAO,OAAO,0BAA2B,CAAEuC,kBAAiB9C,aCnBzD,SAASkD,uBA2BP,MAAO,CACLC,kBA3BF,SACEL,EACAC,EACAC,EACAtB,6GAE8B,SAAMkB,qBAAqBC,gBACvDC,EACAC,EACAC,EACAtB,WAGF,SAP8BtD,qBAsB9BgF,wBAZF,SACEN,EACA9C,6GAGE,SAAM4C,qBAAqBK,qBAAqBH,EAAiB9C,WAEnE,SAFE5B,sBCrBN,IAAMiF,aAAe,CACnBC,aAAc,SACZ5B,EACA6B,EACAhC,GAEA,OAAAlB,QAAQ,YAAa,CAAEqB,gBAAe6B,cAAahC,WAErDiC,oBAAqB,SACnB9B,EACA6B,EACAhC,EACAkC,GAEA,OAAApD,QAAQ,qBAAsB,CAC5BqB,gBACA6B,cACAhC,QACAkC,iBCjBAC,UAAY,CAChBC,UAAW,SAACnB,GACV,OAAAvC,OAAO,SAASuC,eAElBoB,kBAAmB,SACjBpB,GAEA,OAAAvC,OAAO,SAASuC,wBCPpB,SAASqB,aAAaC,GACZ,IAAMC,EAA2B5F,OAAuB,CAC9DE,IAAK,iBACLC,YAAa,WACX,IAAMkE,EAAKsB,GAAU,KACrB,OAAOJ,UAAUE,kBAAkBpB,IAErCjE,QAAS,CACPqD,UAAWkC,UAwBf,MAAO,CACLE,OArBF,SACEtC,EACA6B,EACAhC,EACAkC,oHAEIA,KACIJ,aAAaG,oBACjB9B,EACA6B,EACAhC,EACAkC,iBAGF,OAPArF,oBAUF,SAAMiF,aAAaC,aAAa5B,EAAe6B,EAAahC,kBAA5DnD,mBAKA6F,eAAgBF,MAAAA,SAAAA,EAAwBE,gBCnC5C,SAASC,UAAUJ,GAYjB,MAAO,CACLK,WAZ2BhG,OAAiB,CAC5CE,IAAK,UACLC,YAAa,WACX,IAAMkE,EAAKsB,GAAU,KACrB,OAAOJ,UAAUC,UAAUnB,IAE7BjE,QAAS,CACPqD,UAAWkC,WCRjB,IAAMM,gBAAkB,CACtBC,eAAgB,SAAC7B,GACf,OAAAvC,OAAO,gBAAgBuC,cCNX8B,WACd,MAA4B,oBAAdC,WAAmD,gBAAtBA,UAAUC,QAGvD,SAAgBC,QACd,MAA2B,oBAAbC,kBCHAC,oBAAoBtG,EAAa4D,GAC3CqC,YAEOG,SACTG,aAAaC,QAAQxG,EAAK4D,YAId6C,oBAAoBzG,GAClC,OAAIiG,YAEOG,QACFG,aAAaG,QAAQ1G,GAFrB,KCPX,SAAS2G,eAAetD,GACtB,IAAKA,EAEH,OADAiD,oBAAoB,kBAAmB,aAChC,CACLM,YAAa,GACbrG,WAAW,EACXE,QAAS,cAIP,IAAAV,EAKFD,OAAoB,CACtBE,IAAK,cACLC,YAAa,WAAM,OAAA8F,gBAAgBC,eAAe3C,IAClDnD,QAAS,CACPqD,UAAWF,KARPuD,SACNrG,cACAE,YACAlB,UAiBF,OARIA,GACF+G,oBAAoB,kBAAmB,SAGrCM,GACFN,oBAAoB,kBAAmBM,EAAYC,MAG9C,CAAED,cAAarG,YAAWE,UAASlB,SC/B5C,IAAMuH,mBAAqB,CACzBC,sBAAuB,SACrB7B,EACAtB,EACAC,GAEA,OAAA7B,QAAQ,+BAAgC,CACtCkD,cACAtB,QACAC,eCRN,SAASmD,mBACP9B,EACAtB,EACAC,GAEM,IAAA9D,EAIFD,OAAwB,CAC1BE,IAAK,kBAAkBkF,EACvBjF,YAAa,WACX,OAAIiF,GAAetB,GAASC,EACnBiD,mBAAmBC,sBACxB7B,EACAtB,EACAC,GAGGvB,gBAETpC,QAAS,CACPqD,UAAW2B,KAAiBtB,KAAWC,KAI3C,MAAO,CAAEoD,uBAAiB1G,sBAAWE,mBC5BvC,IAAMyG,cAAgB,CACpBC,cAAe,WACb,OAAAvF,OAAO,iBCFX,SAASwF,gBACD,IAAArH,EAIFD,OAAoB,CACtBE,IAAK,aACLC,YAAaiH,cAAcC,gBAG7B,MAAO,CAAEE,kBAAY9G,sBAAWE,mBCTlC,IAAM6G,UAAY,CAChBC,UAAW,SACT1D,EACA2D,GAEA,OAAA5F,OACE,2BAA2BiC,EAAS4D,+BAA8BD,IAEtEE,SAAU,SAACvD,GACT,OAAAvC,OAAO,kBAAkBuC,KCT7B,SAASwD,UAAU9D,EAAsB2D,gBAAAA,MACjC,IAAAzH,EAIFD,OAAgB,CAClBE,IAAK,SACLC,YAAa,WAAM,OAAAqH,UAAUC,UAAU1D,EAAU2D,MASnD,MAAO,CACLI,eAAkB,GAClBF,SARF,SAAwBG,6GACE,SAAMP,UAAUI,SAASG,WAEjD,SAFwB9H,qBAQxBQ,sBACAE,mBCpBJ,IAAMqH,uBAAyB,CAC7BC,uBAAwB,SACtB7E,EACAW,GAEA,OAAAjC,OAAO,8BAA8BsB,eAAkBW,KCL3D,SAASmE,uBACP9E,EACAW,GAEM,IAAA9D,EAIFD,OAA6B,CAC/BE,IAAK,sBACLC,YAAa,WACX,OAAA6H,uBAAuBC,uBAAuB7E,EAAOW,IACvD3D,QAAS,CACPqD,UAAWL,KAIf,MAAO,CACL+E,2BACA1H,sBACAE,mBCtBJ,IAAMyH,WAAa,CACjBC,iBAAkB,SAChB1C,EACApC,GAEA,OAAArB,QAAQ,UAAW,CAAEyD,SAAQpC,oBCNjC,SAAS+E,aAUP,MAAO,CACLC,aAVF,SAA4B5C,EAAgBpC,6GACjB,SAAM6E,WAAWC,iBACxC1C,EACApC,WAGF,SALyBtD,sBCA7B,IAAMuI,WAAa,CACjBC,oBAAqB,SAACpE,GACpB,OAAAvC,OAAO,eAAeuC,gBCJ1B,SAASqE,aAOP,MAAO,CACLC,sBAPF,SAAqCC,6GACT,SAAMJ,WAAWC,oBAAoBG,WAE/D,SAF0B3I,sBCF9B,SAAS4I,WACP,SAAeC,EAAS1F,6GACC,SAAMF,SAASG,eAAeD,WAErD,SAFuBnD,oBAKzB,SAAe8I,EAAW3F,6GACD,SAAMF,SAASC,eAAeC,WAErD,SAFuBnD,oBAgBzB,MAAO,CACL8I,aACAD,WACAE,iBAdF,SAAgC5F,mHAGrB,gCAAM0F,EAAS1F,kBAAtB6F,EAAOhJ,sBAEA,mBAAM8I,EAAW3F,kBAAxB6F,EAAOhJ,sBAGT,SAAOgJ,UChBJ,4EAAMC,aAAe,eCJfC,iBAAmBxJ,QAAQC,IAAIwJ,4BAA8B,IAK7DjI,YACXxB,QAAQC,IAAIwB,qBACZ,4DAEWiI,cACX1C,oBAAoBuC,eACpB,iECVII,OAASD,cAEFnI,OAAS,IAAIqI,sBAAa,CACrCC,IAAKF,OACLG,MAAO,IAAIC,uBACXC,KAAM,IAAIC,kBAAS,CAAEJ,IAAKF,OAAQO,gBCPvBC,qBAAuB,uBACvBC,mBAAqB,gBAErBC,gBAAkBC,8IAAG,aACJ,2DAApBH,sBAQGI,cAAgBD,iMAAG,aACJ,8GAAlBF,oBCXGI,SAAW,CACtBC,cAAe,WACb,OAAAlJ,OAAOmJ,MAAM,CACXA,MAAOL,gBACPM,YAAa,cAGjBC,UAAW,SAACC,GACV,OAAAtJ,OAAOmJ,MAAM,CACXA,MAAOH,cACPO,UAAW,CAAED,QACbF,YAAa,eCbNI,iCAAmC,8BACnCC,mCACX,gCAEWC,2BAA6BX,qUAAG,aACH,8OAAhCS,kCAaGG,8BAAgCZ,qRAAG,aACJ,8LAAlCU,oCCdGG,qBAAuB,CAClCC,uBAAwB,SACtBC,EACAC,GAEA,OAAA/J,OAAOmJ,MAAM,CACXA,MAAOO,2BACPH,UAAW,CACTO,WACAC,SAEFX,YAAa,cAGjBY,2BAA4B,SAC1BD,GAEA,OAAA/J,OAAOmJ,MAAM,CACXA,MAAOQ,8BACPJ,UAAW,CACTQ,SAEFX,YAAa,eCzBba,qBAAuB,CAC3BC,sBAAuB,SACrBC,GAEA,OAAAnJ,QAAQ,wBAAyBmJ,KCL/BC,mBAAqB,CACzBC,kBAAmB,WAAmC,OAAAzJ,OAAO,kBCQzD0J,MAAmB,CACvBC,KAAM,GACNC,OAAQ,GACRC,KAAM,CACJC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,SAAU,IACVC,KAAM,IACNC,MAAO,IAETC,OAAQ,CACNC,UAAW,UACXC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,cAAe,yBACfC,gBAAiB,wBACjBC,gBAAiB,yBACjBC,kBAAmB,0BAErBC,QAAS,CACPC,eACE,2FAEJC,OAAQ,CACNC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,SAAU,EACV9H,UAAW,EACX+H,OAAQ,EACRC,MAAO,EACPC,MAAO,EACPC,QAAS,EAETC,QAAS,CACPR,KAAM,MAGVS,SAAU,GACVC,YAAa,CACXC,OAAQ,MACRC,aAAc,QACdC,IAAK,QACLC,QAAS,oBCnEGC,uBAAuB7O,OAACY,aACtC,OAAOG,oBAAC+N,gCAAcvD,MAAOA,OAC1B3K,YAIWmO,6BAA6B/O,OAACY,aAC5C,OAAOG,oBAACiO,sBAAoBzD,MAAOA,OAChC3K"}